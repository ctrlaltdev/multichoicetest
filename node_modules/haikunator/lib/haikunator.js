'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _randomSeed = require('random-seed');

var _randomSeed2 = _interopRequireDefault(_randomSeed);

var _lodash = require('lodash.defaults');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Adjectives used by haikunator
 * @type {string[]}
 */
var defaultAdjectives = ['aged', 'ancient', 'autumn', 'billowing', 'bitter', 'black', 'blue', 'bold', 'broad', 'broken', 'calm', 'cold', 'cool', 'crimson', 'curly', 'damp', 'dark', 'dawn', 'delicate', 'divine', 'dry', 'empty', 'falling', 'fancy', 'flat', 'floral', 'fragrant', 'frosty', 'gentle', 'green', 'hidden', 'holy', 'icy', 'jolly', 'late', 'lingering', 'little', 'lively', 'long', 'lucky', 'misty', 'morning', 'muddy', 'mute', 'nameless', 'noisy', 'odd', 'old', 'orange', 'patient', 'plain', 'polished', 'proud', 'purple', 'quiet', 'rapid', 'raspy', 'red', 'restless', 'rough', 'round', 'royal', 'shiny', 'shrill', 'shy', 'silent', 'small', 'snowy', 'soft', 'solitary', 'sparkling', 'spring', 'square', 'steep', 'still', 'summer', 'super', 'sweet', 'throbbing', 'tight', 'tiny', 'twilight', 'wandering', 'weathered', 'white', 'wild', 'winter', 'wispy', 'withered', 'yellow', 'young'];

/**
 * Nouns used by haikunator
 * @type {string[]}
 */
var defaultNouns = ['art', 'band', 'bar', 'base', 'bird', 'block', 'boat', 'bonus', 'bread', 'breeze', 'brook', 'bush', 'butterfly', 'cake', 'cell', 'cherry', 'cloud', 'credit', 'darkness', 'dawn', 'dew', 'disk', 'dream', 'dust', 'feather', 'field', 'fire', 'firefly', 'flower', 'fog', 'forest', 'frog', 'frost', 'glade', 'glitter', 'grass', 'hall', 'hat', 'haze', 'heart', 'hill', 'king', 'lab', 'lake', 'leaf', 'limit', 'math', 'meadow', 'mode', 'moon', 'morning', 'mountain', 'mouse', 'mud', 'night', 'paper', 'pine', 'poetry', 'pond', 'queen', 'rain', 'recipe', 'resonance', 'rice', 'river', 'salad', 'scene', 'sea', 'shadow', 'shape', 'silence', 'sky', 'smoke', 'snow', 'snowflake', 'sound', 'star', 'sun', 'sun', 'sunset', 'surf', 'term', 'thunder', 'tooth', 'tree', 'truth', 'union', 'unit', 'violet', 'voice', 'water', 'waterfall', 'wave', 'wildflower', 'wind', 'wood'];

/**
 * Default options used by haikunate method
 * @type {{delimiter: string, tokenLength: number, tokenHex: boolean, tokenChars: string}}
 */
var defaultOptions = {
  delimiter: '-',
  tokenLength: 4,
  tokenHex: false,
  tokenChars: '0123456789'
};

var Haikunator = function () {
  /**
   * Initialize new haikunator
   * @param {object} defaults
   * @param {string[]} adjectives
   * @param {string[]} nouns
   * @param {string} seed
   */
  function Haikunator() {
    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var _ref$defaults = _ref.defaults;
    var defaults = _ref$defaults === undefined ? {} : _ref$defaults;
    var _ref$adjectives = _ref.adjectives;
    var adjectives = _ref$adjectives === undefined ? defaultAdjectives : _ref$adjectives;
    var _ref$nouns = _ref.nouns;
    var nouns = _ref$nouns === undefined ? defaultNouns : _ref$nouns;
    var seed = _ref.seed;

    _classCallCheck(this, Haikunator);

    this.adjectives = adjectives;
    this.nouns = nouns;

    this.random = new _randomSeed2.default(seed);
    this.config = (0, _lodash2.default)(defaults, defaultOptions);
  }

  /**
   * Generate heroku-like random names
   * @param {object} options
   * @returns {string}
   */


  _createClass(Haikunator, [{
    key: 'haikunate',
    value: function haikunate() {
      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      // set specified options
      var config = (0, _lodash2.default)(options, this.config);

      // set tokenChars if tokenHex is set
      if (config.tokenHex === true) {
        config.tokenChars = '0123456789abcdef';
      }

      // pick adjective and noun
      var adjective = this._randomElement(this.adjectives);
      var noun = this._randomElement(this.nouns);

      // create random token
      var token = '';
      for (var i = 0; i < config.tokenLength; i++) {
        token += this._randomElement(config.tokenChars);
      }

      // create result and return
      var sections = [adjective, noun, token];
      return sections.filter(function (e) {
        return e === 0 || e;
      }).join(config.delimiter);
    }

    /**
     * Get a random element from an array/string
     * @param {(string|Array)} array
     * @returns {*}
     * @private
     */

  }, {
    key: '_randomElement',
    value: function _randomElement(array) {
      return array[this.random(array.length)];
    }
  }]);

  return Haikunator;
}();

exports.default = Haikunator;
module.exports = exports['default'];